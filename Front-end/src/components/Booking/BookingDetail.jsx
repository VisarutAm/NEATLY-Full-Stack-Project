// import { useState } from "react";
// import { assets } from "../../assets/assets";
// import { useBooking } from "../../context/BookingContext";

// const BookingDetail = () => {
//   const { bookingData, setBookingData } = useBooking();
//   const Sumprice = bookingData.price + bookingData.extras.length * 200; // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£

//   // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Guest Info ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå
//   const handleGuestInfoChange = (e) => {
//     setBookingData((prev) => ({
//       ...prev,
//       guestInfo: { ...prev.guestInfo, [e.target.name]: e.target.value },
//     }));
//   };

//   // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Extras ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Checkbox
//   const handleExtrasChange = (e) => {
//     const { value, checked } = e.target;
//     setBookingData((prev) => ({
//       ...prev,
//       extras: checked
//         ? [...prev.extras, value] // ‡πÄ‡∏û‡∏¥‡πà‡∏° option ‡∏ñ‡πâ‡∏≤‡∏ï‡∏¥‡πä‡∏Å
//         : prev.extras.filter((extra) => extra !== value), // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡πÄ‡∏≠‡∏≤‡∏ï‡∏¥‡πä‡∏Å‡∏≠‡∏≠‡∏Å
//     }));
//   };

//   const formatDate = (dateString) => {
//     if (!dateString) return ""; // ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
//     const date = new Date(dateString);
//     return date.toLocaleDateString("en-US", {
//       weekday: "short", // Sun, Mon, Tue, etc.
//       day: "2-digit", // 16
//       month: "short", // May
//       year: "numeric", // 2025
//     });
//   };

//   return (
//     <div className="booking-detail flex flex-col">
//       <p className="bg-green-800">
//         <img src={assets.notebook} />
//         Booking Detail{" "}
//       </p>
//       <div className="container-detail flex flex-col">
//         <div className="time">
//           <div>
//             <p>Check-in</p>
//             <p>After 2:00 PM</p>
//           </div>
//           <div>
//             <p>Check-out</p>
//             <p>Before 12:00 PM</p>
//           </div>
//         </div>
//         <div>
//           <p>Check In: {formatDate(bookingData.checkInDate)}</p>
//           <p>Check Out: {formatDate(bookingData.checkOutDate)}</p>
//           <p>2 Guests</p>
//         </div>
//         <br></br>
//         <span>{bookingData.roomType}</span>
//         <span>{bookingData.price}</span>
//         <p>
//           ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡∏¥‡∏°:{" "}
//           {bookingData.extras.length > 0
//             ? bookingData.extras.map((selectExtra, index) => (
//                 <div key={index}>{selectExtra}</div><div>{priceExtra}</div>
//               ))
//             : "‡πÑ‡∏°‡πà‡∏°‡∏µ"}
//         </p>
//         <hr />
//         <span>Total</span>
//         <span>THB {Sumprice}</span>
//         <h3>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h3>
//         <p>‡∏´‡πâ‡∏≠‡∏á: {bookingData.roomType}</p>
//         <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å: {bookingData.checkInDate}</p>
//         <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å: {bookingData.checkOutDate}</p>
//         <p>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {bookingData.price} ‡∏ö‡∏≤‡∏ó</p>
//         <p>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á: {bookingData.guestInfo.name}</p>
//         <p>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: {bookingData.guestInfo.phone}</p>
//         <p>‡∏≠‡∏µ‡πÄ‡∏°‡∏•: {bookingData.guestInfo.email}</p>
//         <p>
//           ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡∏¥‡∏°:{" "}
//           {bookingData.extras.length > 0
//             ? bookingData.extras.join(", ")
//             : "‡πÑ‡∏°‡πà‡∏°‡∏µ"}
//         </p>
//       </div>
//     </div>
//   );
// };

// export default BookingDetail;

// import { useState } from "react";
import userAuth from "../../context/AuthContext";
import { useBooking } from "../../context/BookingContext";

const BookingDetail = () => {
  // const [discountCode, setDiscountCode] = useState(""); // ‡πÄ‡∏Å‡πá‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡πâ‡∏≠‡∏ô
  // const [discountValue, setDiscountValue] = useState(0); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  const { bookingData } = useBooking();
  const { session } = userAuth()

  const extraPrices = {
    "Breakfast": 150,
    "Extra pillows": 100,
    "Extra bed": 500,
  };

  // const discountCodes = {
  //   DISCOUNT10: 0.1, // ‡∏•‡∏î 10%
  //   DISCOUNT20: 0.2, // ‡∏•‡∏î 20%
  //   DISCOUNT30: 0.3, // ‡∏•‡∏î 30%
  // };

  //   const Sumprice =
  //     bookingData.price +
  //     bookingData.extras.reduce((total, extra) => {
  //       return total + (extraPrices[extra] || 0);
  //     }, 0);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡∏¥‡∏°
  const extrasTotal = bookingData.extras.reduce((total, extra) => {
    return total + (extraPrices[extra] || 0);
  }, 0);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  const totalPrice = bookingData.price + extrasTotal;

  // // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  // const applyDiscount = () => {
  //   if (discountCodes[discountCode]) {
  //     setDiscountValue(discountCodes[discountCode]); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  //   } else {
  //     setDiscountValue(0); // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÑ‡∏°‡πà‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤
  //     alert("‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!");
  //   }
  // };

const sum_price = totalPrice

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏´‡∏±‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
  const finalPrice = bookingData.finalPrice || totalPrice;


  const formatDate = (dateString) => {
    if (!dateString) return "";
    const date = new Date(dateString);
    return date.toLocaleDateString("en-US", {
      weekday: "short",
      day: "2-digit",
      month: "short",
      year: "numeric",
    });
  };

  

  return (
    <div className="booking-detail flex flex-col w-120">
      <p className="bg-green-800 text-white p-2 rounded-t-2xl text-center"> Booking Detail üìù</p>
      <div className="container-detail flex flex-col rounded-b-2xl text-green-300 border-2 border-black/50 p-2 bg-green-600">
        <div className="user-info flex flex-col">
          <div className="flex flex-row justify-between">
          <div className="flex flex-col">
          <strong>Name:</strong>
          <p>{bookingData.guestInfo.name}</p>
          </div>
          <div className="flex flex-col">
            <strong>Tel:</strong>
          <p>{bookingData.guestInfo.phone}</p>
          </div>
          </div>
          <strong>Email: </strong><span>{session.user.email}</span>
        </div>
        <br></br>
        <div className="time flex flex-row justify-between">
          <div>
            <p className="font-medium font text-base ">Check-in</p>
            <p className="text-base ">After 2:00 PM</p>
          </div>
          <div>
            <p className="font-medium font text-base ">Check-out</p>
            <p className="text-base ">Before 12:00 PM</p>
          </div>
        </div>
        <br></br>
        <div>
          <p>
            {formatDate(bookingData.checkInDate)} -{" "}
            {formatDate(bookingData.checkOutDate)}
          </p>
          <p>2 Guests</p>
        </div>
        <br />
        <div className="flex flex-row justify-between">
          <p>{bookingData.roomType}</p>
          <p>{bookingData.price} THB</p>
        </div>
        <div>
          {bookingData.extras.length > 0
            ? bookingData.extras.map((selectExtra, index) => (
                <div key={index}>
                  {selectExtra} - {extraPrices[selectExtra] || 0} THB
                </div>
              ))
            : ""}
        </div>
        <hr />
        <div className="flex flex-row justify-between">
          <span>Total</span>
          <strong>THB {finalPrice.toFixed(2)} </strong>
        </div>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î */}
        {/* <div className="discount-section ">
          <input
            className="border-2 rounded-sm mr-5"
            type="text"
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î"
            value={discountCode}
            onChange={(e) => setDiscountCode(e.target.value.toUpperCase())}
          />
          <button
            className="font-bold border-2 rounded-2xl px-2 text-white hover:bg-green-700"
            onClick={applyDiscount}
          >
            Code
          </button>
        </div> */}

        {/* {discountValue > 0 && (
          <p>
            ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î: <strong>{(discountValue * 100).toFixed(0)}%</strong>
          </p>
        )}

        <span>Total After Discount</span>
        <span>
          <strong>THB {finalPrice.toFixed(2)}</strong>
        </span> */}
      </div>
    </div>
  );
};

export default BookingDetail;
